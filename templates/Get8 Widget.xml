<templateSet group="Get8 Widget">
  <template name="getarea" value="/**&#10; * Возращает тип текущей страницы&#10; *&#10; * @return string&#10; */&#10;this.getArea = function () {&#10;    let area = window.location.pathname;&#10;&#10;    // Удаляем последний символ, если это слеш&#10;    if (area.slice(-1) === '/') {&#10;        area = area.substring(0, area.length - 1);&#10;    }&#10;&#10;    switch (area) {&#10;        case '/contacts/list/companies':&#10;            area = 'comlist';&#10;            break;&#10;        case '/contacts/list/contacts':&#10;            area = 'clist';&#10;            break;&#10;        case '/contacts/list':&#10;            area = 'ccomlist';&#10;            break;&#10;        case '/leads/list':&#10;            area = 'llist';&#10;            break;&#10;        case '/todo/list':&#10;            area = 'tlist';&#10;            break;&#10;        case '/leads/add':&#10;            area = 'lnew';&#10;            break;&#10;        case '/contacts/add':&#10;            area = 'cnew';&#10;            break;&#10;        case '/companies/add':&#10;            area = 'comnew';&#10;            break;&#10;        default:&#10;            switch (true) {&#10;                case /^\/dashboard/.test(area):&#10;                    area = 'dashboard';&#10;                    break;&#10;                case /^\/leads\/pipeline\/\d+$/.test(area):&#10;                    area = 'pipeline';&#10;                    break;&#10;                case /^\/contacts\/detail\/\d+$/.test(area):&#10;                case /^\/contacts\/details\/\d+$/.test(area):&#10;                    area = 'ccard';&#10;                    break;&#10;                case /^\/companies\/detail\/\d+$/.test(area):&#10;                case /^\/companies\/details\/\d+$/.test(area):&#10;                    area = 'comcard';&#10;                    break;&#10;                case /^\/leads\/detail\/\d+$/.test(area):&#10;                case /^\/leads\/details\/\d+$/.test(area):&#10;                    area = 'lcard';&#10;                    break;&#10;                case /^\/customers\/detail\/\d+$/.test(area):&#10;                case /^\/customers\/details\/\d+$/.test(area):&#10;                    area = 'cucard';&#10;                    break;&#10;                case /^\/settings\/widgets$/.test(area):&#10;                    area = 'settings';&#10;                    break;&#10;                case /^\/todo\/calendar\/month$/.test(area):&#10;                    area = 'calmonth';&#10;                    break;&#10;                case /^\/todo\/calendar\/week$/.test(area):&#10;                    area = 'calweek';&#10;                    break;&#10;                case /^\/todo\/calendar\/day$/.test(area):&#10;                    area = 'calday';&#10;                    break;&#10;                case /^\/settings\/pay$/.test(area):&#10;                    area = 'pay';&#10;                    break;&#10;                default:&#10;                    area = false;&#10;                    break;&#10;            }&#10;            break;&#10;    }&#10;&#10;    return area;&#10;};" description="Возвращает тип текущей страницы" toReformat="true" toShortenFQNames="true" />
  <template name="jpar" value="/**&#10; * Функция заменят собой JSON.parse() для хранения настроек в виджетах&#10; * amoCRM с раскодированием &quot;запрещённых&quot; символов. При этом происходит&#10; * проверка на пустоту и в случае всего возаращается пустой обект.&#10; *&#10; * Набор запрещённых символов и их &quot;мнемоник&quot;:&#10; *&#10; * *a; =&gt; &amp;&#10; * *o; =&gt; '&#10; * *q; =&gt; ?&#10; * *e; =&gt; =&#10; * *s; =&gt; &quot; &quot;&#10; *&#10; * @param string text&#10; *&#10; * @return object&#10; */&#10;this.jsonParse = function (text = null) {&#10;    if (!text) {&#10;        return {};&#10;    }&#10;&#10;    text = text&#10;        .replace(/\*a;/g, '&amp;')&#10;        .replace(/\*o;/g, &quot;'&quot;)&#10;        .replace(/\*q;/g, '?')&#10;        .replace(/\*e;/g, '=')&#10;        .replace(/\*s;/g, ' ');&#10;&#10;    try {&#10;        return JSON.parse(text);&#10;    } catch (e) {&#10;        return false;&#10;    }&#10;};" description="Функция заменят собой JSON.parse() для хранения настроек" toReformat="true" toShortenFQNames="true" />
  <template name="jstr" value="/**&#10; * Функция заменят собой JSON.stringify() для хранения настроек в виджетах&#10; * amoCRM с кодирование &quot;запрещённых&quot; символов. При этом происходит&#10; * проверка на пустоту и в случае чего возвращается строку с пустым обектом.&#10; *&#10; * Набор запрещённых символов и их &quot;мнемоник&quot;:&#10; *&#10; * &amp; =&gt; *a;&#10; * ' =&gt; *o;&#10; * ? =&gt; *q;&#10; * &quot; &quot; =&gt; *s;&#10; *&#10; * @param object obj&#10; *&#10; * @return string&#10; */&#10;this.jsonStringify = function (obj = {}) {&#10;    if (!obj) {&#10;        return '{}';&#10;    }&#10;&#10;    return JSON.stringify(obj)&#10;        .replace(/&amp;/g, '*a;')&#10;        .replace(/'/g, '*o;')&#10;        .replace(/\?/g, '*q;')&#10;        .replace(/ /g, '*s;');&#10;};" description="Функция заменят собой JSON.stringify() для хранения настроек" toReformat="true" toShortenFQNames="true" />
  <template name="error" value="/**&#10; * Выводит уведомление об ошибке слева снизу&#10; *&#10; * @param header&#10; * @param text&#10; *&#10; * @return void&#10; */&#10;this.error = function (text, header = 'Getmail: Ошибка') {&#10;    AMOCRM.notifications.add_error({&#10;        header : header,&#10;        text   : text,&#10;        date   : Math.ceil(Date.now() / 1000),&#10;    });&#10;};" description="Выводит уведомление об ошибке слева снизу" toReformat="true" toShortenFQNames="true" />
  <template name="notify" value="/**&#10; * Выводит уведомление об успехе слева снизу&#10; *&#10; * @param title&#10; * @param message&#10; *&#10; * @return void&#10; */&#10;this.notify = function (message, title = 'Getmail: Успешно') {&#10;    AMOCRM.inbox.showNotification({&#10;&#9;    type    : 'error',&#10;&#9;    title   : title,&#10;&#9;    message : message,&#10;&#9;    icon    : '/frontend/images/interface/inbox/mesage_bot_avatar.png',&#10;    });&#10;};" description="Выводит уведомление об успехе слева снизу" toReformat="true" toShortenFQNames="true" />
  <template name="isadm" value="/**&#10; * Возвращает является ли текущий пользователь админом или нет.&#10; *&#10; * @return boolean&#10; */&#10;this.isAdmin = function () {&#10;    const managers = AMOCRM.constant('managers');&#10;    const user     = AMOCRM.constant('user');&#10;&#10;    for (let key in managers) {&#10;        if (user.login == managers[key].login) {&#10;            return managers[key].is_admin == 'Y';&#10;        }&#10;    }&#10;&#10;    return false;&#10;};" description="Возвращает является ли текущий пользователь админом или нет" toReformat="true" toShortenFQNames="true" />
  <template name="isresu" value="/**&#10; * Проверяем является ли текущий пользователь ответственным за текущую сделку.&#10; *&#10; * @return bool&#10; */&#10;this.isResponsibleUser = function () {&#10;    if (AMOCRM.data.current_card.id) {&#10;        const user   = AMOCRM.constant('user');&#10;        const entity = AMOCRM.data.current_entity;&#10;&#10;        switch (entity) {&#10;            case 'leads':&#10;                if ($('[name=&quot;lead[MAIN_USER]&quot;]').length &amp;&amp; $('[name=&quot;lead[MAIN_USER]&quot;]').val() == user.id) {&#10;                    return true;&#10;                }&#10;                break;&#10;            case 'contacts':&#10;            case 'companies':&#10;                if ($('[name=&quot;contact[MAIN_USER]&quot;]').length &amp;&amp; $('[name=&quot;contact[MAIN_USER]&quot;]').val() == user.id) {&#10;                    return true;&#10;                }&#10;                break;&#10;        }&#10;    }&#10;&#10;    return false;&#10;};" description="Проверяем является ли текущий пользователь ответственным за текущую сделку" toReformat="true" toShortenFQNames="true" />
  <template name="sid" value="// Добавляем id к modal-body виджета&#10;    $('#save_' + self.params.widget_code).closest('.modal-body').attr('id', self.id('', false));" description="Добавляем id к modal-body виджета" toReformat="true" toShortenFQNames="true" />
</templateSet>